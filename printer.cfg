#ErkHal's Klipper config for heavily modified Ender 3 Pro

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[mcu]
serial: /dev/ttyAMA0
restart_method: command

#########################################
# PROBE
#########################################

# Define a probe
[probe]
pin: PA3
z_offset: 2.345

# The safe_z_home section modifies the default G28 behavior
[safe_z_home]
home_xy_position: 120,120
speed: 60
z_hop: 15
z_hop_speed: 5

########################################
# STEPPERS
########################################

[stepper_x]
step_pin: PD12
dir_pin: PC4
enable_pin: !PE8
endstop_pin: ^PB14  # PA1 for X-max
microsteps: 16
rotation_distance: 40
position_endstop: 0
position_max: 200

[stepper_y]
step_pin: PE2
dir_pin: PE4
enable_pin: !PE3
endstop_pin: ^PB13  # PA2 for Y-max
microsteps: 16
rotation_distance: 40
position_endstop: 0
position_max: 200

[stepper_z]
step_pin: PE6
dir_pin: !PC13
enable_pin: !PE5
endstop_pin: probe:z_virtual_endstop
position_min: -2 # May need to travel below zero because of bed tilt
microsteps: 16
rotation_distance: 8
position_max: 400

[extruder]
step_pin: PE1
dir_pin: PE0
enable_pin: PC5
microsteps: 16
rotation_distance: 4.571
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB15
sensor_type: NTC 100K beta 3950
sensor_pin: PC0
#control: pid
#pid_Kp: 22
#pid_Ki: 1.08
#pid_Kd: 114
min_temp: 0
max_temp: 295

[tmc2209 stepper_x]
uart_pin: PA15
interpolate: True
run_current: 1.0
hold_current: 0.6
stealthchop_threshold: 999999

[tmc2209 stepper_y]
uart_pin: PC15
interpolate: True
run_current: 1.0
hold_current: 0.6
stealthchop_threshold: 999999

[tmc2209 stepper_z]
uart_pin: PC14
run_current: 1.0
hold_current: 0.6
stealthchop_threshold: 999999

[tmc2209 extruder]
uart_pin: PD11
run_current: 0.3
hold_current: 0.1
stealthchop_threshold: 999999

#########################################
# HEATED BED
#########################################

[heater_bed]
heater_pin: PB4
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC3
#control: watermark
min_temp: 0
max_temp: 130

#########################################
# FANS
#########################################

#part cooling FAN0
[fan]
pin: PB0
max_power: 0.9
shutdown_speed: 0

#fan for hotend FAN1
[heater_fan my_nozzle_fan]
pin: PB1
max_power: 0.9
shutdown_speed: 0

#fan for control board FAN2
[heater_fan my_control_fan]
pin: PB2
max_power: 0.9
shutdown_speed: 0

#########################################
# ALIASES
#########################################

[board_pins]
aliases:
    # EXP2 header
    EXP1_10=<5V>, EXP1_9=<GND>,
    EXP1_8=PD1,   EXP1_7=PD0,
    EXP1_6=PC12,  EXP1_5=PC10,     # Slot in the socket on the other side
    EXP1_4=PD2,   EXP1_3=PC11,
    EXP1_2=PA8,   EXP1_1=PC9,

    # EXP1 header
    EXP2_10=<5V>, EXP2_9=<GND>,
    EXP2_8=<RST>, EXP2_7=PB10,
    EXP2_6=PA7,   EXP2_5=PC7,       # Slot in the socket on the other side
    EXP2_4=PA4,   EXP2_3=PC6,
    EXP2_2=PA5,   EXP2_1=PA6

# See the sample-lcd.cfg file for definitions of common LCD displays.

#########################################
# MAINSAIL SETTINGS
#########################################

[virtual_sdcard]
path: /home/pi/gcode_files

[pause_resume]

[display_status]

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    RESUME_BASE {get_params}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 16.064
#*# pid_ki = 0.830
#*# pid_kd = 77.709
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 72.100
#*# pid_ki = 1.275
#*# pid_kd = 1019.314
